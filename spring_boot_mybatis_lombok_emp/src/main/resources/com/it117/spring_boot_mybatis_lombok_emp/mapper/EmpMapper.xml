<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it117.spring_boot_mybatis_lombok_emp.mapper.EmpMapper">

    <!--    sql片段的id为commonSelect-->
    <sql id="commonSelect">
        select id,
               username,
               password,
               name,
               gender,
               image,
               job,
               entrydate,
               dept_id,
               create_time,
               update_time
        from emp
    </sql>
    <select id="list" resultType="com.it117.spring_boot_mybatis_lombok_emp.pojo.Emp">
        <!-- # id需要与Mapper接口中的方法名一致 并保持返回类型一致.-->
        <!-- 如果有返回值 resultType="" -->
        <!-- resultType :单条记录所封装的类型-->

        <include refid="commonSelect"/>
        <!-- 自闭合-->
        <where> <!--where会自动进行判断是否要加where和and -->
            <if test="name != null ">
                name like concat('%', #{name}, '%')
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and entrydate between #{begin} and #{end}
            </if>
            order by update_time desc
        </where>
    </select>
<!--    动态更新员工的信息-->
    <update id="update">
        update emp
        <set>
            <if test="username != null">
                username = #{username},
            </if>

            <if test="name! = null">
                name = #{name},
            </if>

            <if test="gender! = null">
                gender = #{gender},
            </if>

            <if test="image! = null">
                image = #{image},
            </if>

            <if test="job != null">
                job = #{job},
            </if>

            <if test="entrydate != null">
                entrydate = #{entrydate},
            </if>

            <if test="deptId != null">
                dept_id = #{deptId},
            </if>

            <if test="updateTime != null">
                update_time = #{updateTime}
            </if>
        </set>
        where id = #{id}
    </update>


<!--    批量删除员工信息-->
    <delete id="deleteByIds">
        delete from emp where id in
        <!--
        collection 表示集合
        item 表示遍历出来的元素
        separator 表示使用什么分隔符
        open 表示开始前拼接的片段
        close 表示遍历结束后拼接的片段
        -->
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

<!--    sql片段的抽取和include是使用-->




</mapper>